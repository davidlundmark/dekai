@import "variables";
@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin transition($transition-property: all, $transition-duration: $base-transition-duration, $transition-timing: $base-transition-timing, $acceleration: false) {
    transition: $transition-property $transition-duration $transition-timing;
    @if $acceleration==true {
        transform: translateZ(0);
        backface-visibility: hidden;
    }
}

@mixin customTransitionTiming($custom-transition-timing) {
    @include transition($transition-timing: $custom-transition-timing);
}

@mixin acceleratedTransition($transition-property: all, $transition-duration: $base-transition-duration, $transition-timing: $base-transition-timing, $acceleration: false) {
    @include transition($transition-property, $transition-duration, $transition-timing, true);
}

@mixin setFont($font-name: $base-font-name) {
    @if $font-name==$base-font-name {
        @include setTextFormat($base-font-family, $base-font-size, $base-font-weight, $base-line-height);
        text-decoration: none;
    }
    @else if $font-name==$heading-font-name {
        @include setTextFormat($heading-font-family, $heading-font-size, $heading-font-weight, $heading-line-height);
    }
    //@else if $font-name==$h1-font-name {
    //    @include setTextFormat($h1-font-family, $h1-font-size, $h1-font-weight, $h1-line-height, $h1-text-transform);
    //}
    //@else if $font-name==$h2-font-name {
    //    @include setTextFormat($h2-font-family, $h2-font-size, $h2-font-weight, $h2-line-height, $h2-text-transform);
    //}
    //@else if $font-name==$link-font-name {
    //    @include setTextFormat($link-font-family, $link-font-size, $link-font-weight, $base-line-height, $link-text-transform, $link-text-decoration);
    //}
    @else if $font-name==$button-font-name {
        @include setTextFormat($button-font-family, $button-font-size, $button-font-weight, $button-line-height, $button-text-transform);
        text-decoration: none;
        letter-spacing: 1px;
    }
}

@mixin setFontSize($font-size) {
    font-size: $font-size;
}

@mixin setTextFormat($font-family: null, $font-size: null, $font-weight: null, $line-height: null, $text-transform: none, $text-decoration: null, $font-style: null) {
    @if $font-size !=null {
        font-size: $font-size;
    }
    @if $font-family !=null {
        font-family: $font-family;
    }
    @if $font-weight !=null {
        font-weight: $font-weight;
    }
    @if $line-height !=null {
        line-height: $line-height;
    }
    @if $text-transform !=none {
        text-transform: $text-transform;
    }
    @if $font-style !=null {
        font-style: $font-style;
    }
    @if $text-transform !=null {
        text-decoration: $text-decoration;
    }
}

@mixin fixedOverlay($top:0, $right:0, $bottom:0, $left:0) {
    position: fixed;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin border($color:$base-border-color, $dir:null, $thickness:$base-border-thickness, $style:$base-border-style) {
    @if $dir==null {
        border: $thickness $style $color;
    }
    @else if $dir==top {
        border-top: $thickness $style $color;
    }
    @else if $dir==right {
        border-right: $thickness $style $color;
    }
    @else if $dir==bottom {
        border-bottom: $thickness $style $color;
    }
    @else if $dir==left {
        border-left: $thickness $style $color;
    }
}

@mixin createCircle($background-color: $base-brand-color, $diameter: $gap, $color: $base-font-color, $background-hover-color: null, $border: null) {
    //padding: $padding;
    width: $diameter;
    height: $diameter;
    border-radius: $diameter;
    //float: left;
    text-align: center;
    position: relative;
    @if $background-color !=null {
        background-color: $background-color;
    }
    @if $color !=null {
        color: $color;
    }
    @if $border !=null {
        border: $border;
    }
    //font-size: @text-size;border: @border;
    @if $background-hover-color !=null {
        border: $border;
        .no-touch & {
            &:hover {
                @include transition();
            }
        }
    }

    > .icon {
        @include centerElement();
    }
}

@mixin centerElement() {
    position: absolute;
    left: 50%;
    top: 50%;
    @include translate(-50%, -50%);
}

@mixin translate($x, $y) {
    transform: translate($x, $y);
}

@mixin translateY($y) {
    transform: translateY($y);
}
